use super::inventory::InventoryItems;
pub mod resource_nodes_config;

pub enum ResourceNodes {
    DewberryBush,
    DewberryBushLarge,
    DrizzlewingNest,
    DrizzlewingNestLarge,
    WormtongueNest,
    WormtongueNestLarge,
    SlickshellBroodmother,
    SlickshellBroodmotherLarge,
    GrasscapMushrooms,
    GrasscapMushroomsLarge,
    RootsDeposit,
    RootsDepositLarge,
    MossBrocoliPatch,
    MossBrocoliPatchLarge,
    BleedingTooth,
    BleedingToothLarge,
    ClayDeposit,
    ClayDepositLarge,
    FlaxField,
    FlaxFieldLarge,
    HerbNode,
    HerbNodeLarge,
    LeechBroodmother,
    LeechBroodmotherLarge,
    OvergrownStone,
    OvergrownStoneLarge,
    ReedField,
    ReedFieldLarge,
    RootDeposit,
    RootDepositLarge,
    SeaMarrowDeposit,
    SeaMarrowDepositLarge,
    SnakeNest,
    SnakeNestLarge,
    StoneDeposit,
    StoneDepositLarge,
    SwampWheatField,
    SwampWheatFieldLarge,
    WaterStriderMolt,
    WaterStriderMoltLarge,
    //CoalVein,
    //CoalVeinLarge,
    //CopperVein,
    //SaltVein,
    //AlgaePond,
    //CopperfinPond,
    //ThunderfishPond,
    //AncientProtoWheat,
    //DeadLeviathan,
    //GiantProtoFungus,
    //FertileSoil
}

pub enum NodeSize {
    Small,
    Large,
    Gigantic,
}

pub struct ResourceNodeConfig {
    pub name: &'static str,
    pub primary_resource: InventoryItems,
    pub bonus_resources: Vec<(InventoryItems, f32)>,
    pub total_charges: f32,
    pub size: NodeSize,
}

impl ResourceNodes {
    pub fn get_config(&self) -> &'static ResourceNodeConfig {
        match self {
            ResourceNodes::DewberryBush => &resource_nodes_config::DEWBERRY_BUSH,
            ResourceNodes::DewberryBushLarge => &resource_nodes_config::DEWBERRY_BUSH_LARGE,
            ResourceNodes::DrizzlewingNest => &resource_nodes_config::DRIZZLEWING_NEST,
            ResourceNodes::DrizzlewingNestLarge => &resource_nodes_config::DRIZZLEWING_NEST_LARGE,
            ResourceNodes::WormtongueNest => todo!(),
            ResourceNodes::WormtongueNestLarge => todo!(),
            ResourceNodes::SlickshellBroodmother => todo!(),
            ResourceNodes::SlickshellBroodmotherLarge => todo!(),
            ResourceNodes::GrasscapMushrooms => &resource_nodes_config::GRASSCAP_MUSHROOMS,
            ResourceNodes::GrasscapMushroomsLarge => &resource_nodes_config::GRASSCAP_MUSHROOMS_LARGE,
            ResourceNodes::RootsDeposit => todo!(),
            ResourceNodes::RootsDepositLarge => todo!(),
            ResourceNodes::MossBrocoliPatch => todo!(),
            ResourceNodes::MossBrocoliPatchLarge => todo!(),
            ResourceNodes::BleedingTooth => &resource_nodes_config::BLEEDING_TOOTH,
            ResourceNodes::BleedingToothLarge => &resource_nodes_config::BLEEDING_TOOTH_LARGE,
            ResourceNodes::ClayDeposit => &resource_nodes_config::CLAY_DEPOSIT,
            ResourceNodes::ClayDepositLarge => &resource_nodes_config::CLAY_DEPOSIT_LARGE,
            ResourceNodes::FlaxField => &resource_nodes_config::FLAX_FIELD_LARGE,
            ResourceNodes::FlaxFieldLarge => &resource_nodes_config::FLAX_FIELD_LARGE,
            ResourceNodes::HerbNode => todo!(),
            ResourceNodes::HerbNodeLarge => todo!(),
            ResourceNodes::LeechBroodmother => todo!(),
            ResourceNodes::LeechBroodmotherLarge => todo!(),
            ResourceNodes::OvergrownStone => todo!(),
            ResourceNodes::OvergrownStoneLarge => todo!(),
            ResourceNodes::ReedField => todo!(),
            ResourceNodes::ReedFieldLarge => todo!(),
            ResourceNodes::RootDeposit => todo!(),
            ResourceNodes::RootDepositLarge => todo!(),
            ResourceNodes::SeaMarrowDeposit => todo!(),
            ResourceNodes::SeaMarrowDepositLarge => todo!(),
            ResourceNodes::SnakeNest => todo!(),
            ResourceNodes::SnakeNestLarge => todo!(),
            ResourceNodes::StoneDeposit => todo!(),
            ResourceNodes::StoneDepositLarge => todo!(),
            ResourceNodes::SwampWheatField => todo!(),
            ResourceNodes::SwampWheatFieldLarge => todo!(),
            ResourceNodes::WaterStriderMolt => todo!(),
            ResourceNodes::WaterStriderMoltLarge => todo!(),
        }
    }
}
